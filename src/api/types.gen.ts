// This file is auto-generated by @hey-api/openapi-ts

export type Block = {
  id: string
  index: number
  parentBlockId?: string
  documentId: string
  ownedByTeamId?: string
  ownedByPersonId?: string
  snoozedUntil?: number
  lockedAt?: number
  lastModifiedAt: number
  type: 'TEXT' | 'DRAWING'
  data?: {
    title: string
    canvasId?: string
    contentId?: string
  }
}

export type type = 'TEXT' | 'DRAWING'

export type Comment = {
  id: string
  postedAt: number
  userId: string
  contentId: string
  parentCommentId?: string
  documentId?: string
  sequenceId?: string
  noteId?: string
  onBlockId?: string
  onEventId?: string
  resolvedAt?: number
  resolvedByUserId?: string
}

export type Content = {
  id: string
  state: string
  flagList: Array<string>
}

export type Document = {
  /**
   * The unique identifier of the document
   */
  id: string
  /**
   * The title of the document
   */
  title: string
  /**
   * The status of the document
   */
  status:
    | 'CANCELED'
    | 'IDEA'
    | 'DEVELOPMENT'
    | 'RELEASED'
    | 'DRAFT'
    | 'INITIAL'
    | 'ARCHIVED'
  /**
   * The public identifier of the document
   */
  publicId: number
  /**
   * The unique identifier of the user who created the document
   */
  createdByUserId: string
  /**
   * The unique identifier of the team that owns the document
   */
  ownedByTeamId?: string
  /**
   * The unique identifier of the person that owns the document
   */
  ownedByPersonId?: string
  /**
   * The list of VCS tags associated with the document
   */
  vcsTagList: Array<string>
  /**
   * The timestamp when the document was archived
   */
  archivedAt?: number
  /**
   * The unique identifier of the user who archived the document
   */
  archivedByUserId?: string
  /**
   * The timestamp when the document was last modified
   */
  lastModifiedAt: number
  /**
   * The timestamp when the document was released
   */
  releasedAt?: number
}

/**
 * The status of the document
 */
export type status =
  | 'CANCELED'
  | 'IDEA'
  | 'DEVELOPMENT'
  | 'RELEASED'
  | 'DRAFT'
  | 'INITIAL'
  | 'ARCHIVED'

export type Label = {
  id: string
  name: string
  color: string
}

export type Note = {
  id: string
  publicId: number
  status: 'DRAFT' | 'ACTIVE' | 'INITIAL'
  contentId: string
  referenceId?: string
  personId?: string
  lastModifiedByUserId: string
  lastModifiedAt: number
}

export type status2 = 'DRAFT' | 'ACTIVE' | 'INITIAL'

export type NoteLabel = {
  noteId: string
  labelId: string
}

export type Person = {
  id: string
  name: string
  email?: string
  imageSet?: {
    '16': string
    '32': string
    '64': string
    '128': string
    '256': string
  }
  description: string
}

export type Reference = {
  id: string
  name: string
  url: string
}

export type Sequence = {
  id: string
  name: string
  publicId: string
  type: 'USER' | 'STATUS' | 'WISH'
  ownedByPersonId?: string
  status?:
    | 'CANCELED'
    | 'IDEA'
    | 'DEVELOPMENT'
    | 'RELEASED'
    | 'DRAFT'
    | 'INITIAL'
    | 'ARCHIVED'
  icon?: string
  pinned?: number
  groupBy: 'NONE' | 'STATUS'
}

export type type2 = 'USER' | 'STATUS' | 'WISH'

export type groupBy = 'NONE' | 'STATUS'

export type SequenceDocument = {
  sequenceId: string
  documentId: string
  order: number
}

export type User = {
  id: string
  email: string
  name?: string
  imageSet?: {
    '16': string
    '32': string
    '64': string
    '128': string
    '256': string
  }
  isDemoAccount: boolean
}

export type Workspace = {
  id: string
  publicId: string
  name: string
  icp?: string
  strategy?: string
  vision?: string
  icon?: string
}

export type GetBlockListData = {
  query?: {
    documentId?: string
  }
}

export type GetBlockListResponse = Array<Block>

export type GetBlockListError = {
  message: string
}

export type GetCommentListResponse = Array<Comment>

export type GetCommentListError = {
  message: string
}

export type GetContentListResponse = Array<Content>

export type GetContentListError = {
  message: string
}

export type GetContentData = {
  path: {
    contentId: string
  }
}

export type GetContentResponse = Content

export type GetContentError = {
  message: string
}

export type GetDocumentListData = {
  query?: {
    /**
     * Whether to include archived documents in the list. Defaults to false.
     */
    includeArchived?: 'true' | 'false'
  }
}

export type GetDocumentListResponse = Array<Document>

export type GetDocumentListError = {
  message: string
}

export type GetDocumentData = {
  path: {
    documentId: string
  }
}

export type GetDocumentResponse = Document

export type GetDocumentError = {
  message: string
}

export type GetLabelListResponse = Array<Label>

export type GetLabelListError = {
  message: string
}

export type GetNoteLabelListResponse = Array<NoteLabel>

export type GetNoteLabelListError = {
  message: string
}

export type GetNoteListResponse = Array<Note>

export type GetNoteListError = {
  message: string
}

export type CreateNoteData = {
  body?: {
    createdByUserId: string
    content: string
    contentFormat?: 'plaintext' | 'markdown'
    referenceId?: string
    personId?: string
    lastModifiedAt?: string
  }
}

export type CreateNoteResponse = Note

export type CreateNoteError = {
  message: string
}

export type DeleteNoteData = {
  path: {
    noteId: string
  }
}

export type DeleteNoteResponse = {
  [key: string]: unknown
}

export type DeleteNoteError = {
  message: string
}

export type GetNoteData = {
  path: {
    noteId: string
  }
}

export type GetNoteResponse = Note

export type GetNoteError = {
  message: string
}

export type GetPersonListData = {
  query?: {
    description?: string
    email?: string
    name?: string
  }
}

export type GetPersonListResponse = Array<Person>

export type GetPersonListError = {
  message: string
}

export type CreatePersonData = {
  body?: {
    name: string
    email?: string
    image?: string
    description?: string
  }
}

export type CreatePersonResponse = Person

export type CreatePersonError = {
  message: string
}

export type GetPersonData = {
  path: {
    personId: string
  }
}

export type GetPersonResponse = Person

export type GetPersonError = {
  message: string
}

export type GetPersonByEmailData = {
  path: {
    email: string
  }
}

export type GetPersonByEmailResponse = Person

export type GetPersonByEmailError = {
  message: string
}

export type UpsertPersonData = {
  body?: {
    name: string
    image?: string
    description?: string
  }
  path: {
    email: string
  }
}

export type UpsertPersonResponse = Person

export type UpsertPersonError = {
  message: string
}

export type GetReferenceListResponse = Array<Reference>

export type GetReferenceListError = {
  message: string
}

export type CreateReferenceData = {
  body?: {
    name: string
    url: string
  }
}

export type CreateReferenceResponse = Reference

export type CreateReferenceError = {
  message: string
}

export type GetSequenceDocumentListResponse = Array<SequenceDocument>

export type GetSequenceDocumentListError = {
  message: string
}

export type GetSequenceListResponse = Array<Sequence>

export type GetSequenceListError = {
  message: string
}

export type GetUserListResponse = Array<User>

export type GetUserListError = {
  message: string
}

export type CreateUserData = {
  body?: {
    name: string
    email: string
    image?: string
  }
}

export type CreateUserResponse = User

export type CreateUserError = {
  message: string
}

export type GetUserData = {
  path: {
    userId: 'current' | string
  }
}

export type GetUserResponse = User

export type GetUserError = {
  message: string
}

export type GetWorkspaceResponse = Workspace

export type GetWorkspaceError = {
  message: string
}
